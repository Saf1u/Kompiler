 REPTSTART0
 CLASSDECLORFUNCDEF REPTSTART0
 CLASSDECL REPTSTART0
 S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => TYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; CLASSDECL REPTSTART0
class person { public function ignore : ( ) => integer ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; CLASSDECL REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; FUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; FUNCHEAD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman sr FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: id S1 FUNCMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet S1 FUNCMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } FUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } FUNCHEAD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman sr FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: id S1 FUNCMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet S1 FUNCMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } CLASSDECL REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } semi S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; S46 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; FUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; FUNCHEAD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human sr FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: id S1 FUNCMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet S1 FUNCMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } FUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } FUNCHEAD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person sr FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: id S1 FUNCMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet S1 FUNCMETHOD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } FUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } FUNCHEAD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => TYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : id S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( ARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h S3 S9 S10 dot id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } FUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } FUNCHEAD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => TYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } CLASSDECLORFUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } FUNCDEF REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } FUNCHEAD FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer ) => TYPE S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer ) => integer S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer ) => integer S2E FUNCBODY REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer ) => integer lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer ) => integer { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class person { public function ignore : ( ) => integer ; } ; class person { attribute x : integer ; attribute x : integer ; } ; class superHuman { private attribute x : integer ; private attribute y : integer ; public function greet : ( p : integer ) => void ; public function greet : ( ) => void ; } ; function superHuman :: greet ( p : integer ) => void { localvar y : integer ; } function superHuman :: greet ( ) => void { } class human isa superHuman { private attribute x : integer ; public function greet : ( ) => void ; } ; function human :: greet ( ) => void { } function person :: greet ( x : integer ) => void { } function call ( ) => integer { localvar x : integer ; localvar x : integer ; localvar h : human ; write ( h . x ) ; } function call ( ) => integer { } function call ( x : integer ) => integer { } S36 REPTSTART0
