 REPTSTART0
 CLASSDECLORFUNCDEF REPTSTART0
 CLASSDECL REPTSTART0
 S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } semi S46 REPTSTART0
class human { attribute x : integer ; } ; S46 REPTSTART0
class human { attribute x : integer ; } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( FPARAMS rpar S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) S35 arrow RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => RETURNTYPE S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void S2E semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human comma id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; FUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; FUNCHEAD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller sr FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: FUNCCONSTRUCTORORMETHOD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: id S1 FUNCMETHOD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye S1 FUNCMETHOD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( ARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } FUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } FUNCHEAD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : id S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : id S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( ARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h S3 S9 S10 dot id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( ARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n S3 S9 S10 dot id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( ARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n S3 S9 S10 dot id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( ARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n S3 S9 S10 dot id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write lpar EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( EXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( ARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n S3 S9 S10 dot id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . id S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none S1 S8 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) semi S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; S30 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n S3 S9 S10 dot id S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . id S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n S3 S9 S10 dot id S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . id S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : id S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( floatlit S13 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 S13 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer ARRAYSIZE REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer lsqbr ARRAYSIZEPRIME REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ ARRAYSIZEPRIME REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ intlit S5X rsqbr REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 S5X rsqbr REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] ARRAYSIZE REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] lsqbr ARRAYSIZEPRIME REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ ARRAYSIZEPRIME REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ intlit S5X rsqbr REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 S5X rsqbr REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr S3 INDICE VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr lsqbr ARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ ARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ TERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ FACTOR RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 S5 RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] S9 S28 ASSIGNOP EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] equal EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = ARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = TERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr S3 INDICE VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr lsqbr ARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ ARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ TERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ FACTOR RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 S5 RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] INDICE VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] lsqbr ARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ ARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ TERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ FACTOR RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ floatlit S13 RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 S13 RIGHTRECTERM RIGHTRECARITHEXPR rsqbr VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] VARIABLEASSIGNORFUNCCALLPRIME2 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] S9 S28 ASSIGNOP EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] equal EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = ARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = TERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } FUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } FUNCHEAD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } FUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } FUNCHEAD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x S3 S9 S10 dot id S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . id S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age S1 S8 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age S3 S9 S10 ASSIGNOP EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age equal EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = ARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = TERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } FUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } FUNCHEAD FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer ARRAYSIZE REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer lsqbr ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ intlit S5X rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 S5X rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] ARRAYSIZE REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] lsqbr ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ intlit S5X rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 S5X rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] ARRAYSIZE REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] lsqbr ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ intlit S5X rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 S5X rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => RETURNTYPE S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void S2E FUNCBODY REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } S36 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : id S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : id S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; CLASSDECLORFUNCDEF REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; CLASSDECL REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute p1 S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute p1 : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute p1 : id S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute p1 : x S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute p1 : x ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute p1 : x ; } semi S46 REPTSTART0
class human { attribute x : integer ; } ; class ruller { public function goodBye : ( ) => void ; attribute kingdomSize : integer ; } ; class king isa ruller { attribute reign : integer ; } ; class superhuman isa human , king { attribute y : integer ; } ; function ruller :: goodBye ( ) => void { write ( 20 ) ; } function main ( ) => void { localvar h : human ; localvar n : superhuman ; write ( h . x ) ; write ( n . x ) ; write ( n . reign ) ; write ( n . kingdomSize ) ; write ( n . none ) ; n . goodBye ( ) ; n . hello ( ) ; localvar z : undeclaredclass ; noop ( ) ; test ( ) ; test ( 1.1 ) ; localvar arr : integer [ 5 ] [ 5 ] ; arr [ 1 ] = 44 ; arr [ 1 ] [ 1.1 ] = 4 ; arrayAcceptor ( arr ) ; } function main ( ) => void { } function test ( x : integer ) => void { x . age = 33 ; } function arrayAcceptor ( x : integer [ 5 ] [ 5 ] [ 5 ] ) => void { } class a isa b { } ; class b isa c { } ; class c isa a { } ; class x { attribute p3 : y ; } ; class y { attribute p2 : z ; } ; class z { attribute p1 : x ; } ; S46 REPTSTART0
