[function, function, 1][id, main, 1][lpar, (, 1][id, y, 1][colon, :, 1][integer, integer, 1][lsqbr, [, 1][intlit, 10, 1][rsqbr, ], 1][rpar, ), 1][arrow, =>, 1][integer, integer, 1][lcurbr, {, 1]
[localvar, localvar, 2][id, p, 2][colon, :, 2][integer, integer, 2][lsqbr, [, 2][intlit, 5, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 5, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 3, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 1, 2][rsqbr, ], 2][semi, ;, 2]
[localvar, localvar, 3][id, z, 3][colon, :, 3][integer, integer, 3][semi, ;, 3]
[id, z, 4][equal, =, 4][intlit, 1, 4][semi, ;, 4]
[write, write, 5][lpar, (, 5][id, z, 5][rpar, ), 5][semi, ;, 5]
[id, z, 6][equal, =, 6][lpar, (, 6][lpar, (, 6][intlit, 1, 6][plus, +, 6][intlit, 93, 6][plus, +, 6][intlit, 1, 6][plus, +, 6][intlit, 10, 6][plus, +, 6][intlit, 9, 6][plus, +, 6][lpar, (, 6][intlit, 33, 6][plus, +, 6][intlit, 2, 6][mult, *, 6][intlit, 2, 6][rpar, ), 6][mult, *, 6][lpar, (, 6][intlit, 60, 6][div, /, 6][intlit, 3, 6][rpar, ), 6][rpar, ), 6][div, /, 6][intlit, 2, 6][rpar, ), 6][plus, +, 6][lpar, (, 6][intlit, 1, 6][mult, *, 6][intlit, 4, 6][div, /, 6][intlit, 2, 6][plus, +, 6][intlit, 9, 6][rpar, ), 6][plus, +, 6][lpar, (, 6][intlit, 100, 6][mult, *, 6][intlit, 5, 6][rpar, ), 6][semi, ;, 6]
[write, write, 7][lpar, (, 7][id, z, 7][rpar, ), 7][semi, ;, 7]
[id, p, 8][lsqbr, [, 8][intlit, 1, 8][rsqbr, ], 8][lsqbr, [, 8][intlit, 0, 8][rsqbr, ], 8][lsqbr, [, 8][intlit, 1, 8][rsqbr, ], 8][lsqbr, [, 8][intlit, 0, 8][rsqbr, ], 8][equal, =, 8][id, z, 8][semi, ;, 8]
[id, p, 9][lsqbr, [, 9][intlit, 2, 9][rsqbr, ], 9][lsqbr, [, 9][intlit, 2, 9][rsqbr, ], 9][lsqbr, [, 9][intlit, 2, 9][rsqbr, ], 9][lsqbr, [, 9][intlit, 1, 9][rsqbr, ], 9][equal, =, 9][id, z, 9][plus, +, 9][intlit, 2, 9][semi, ;, 9]
[write, write, 10][lpar, (, 10][id, p, 10][lsqbr, [, 10][intlit, 1, 10][rsqbr, ], 10][lsqbr, [, 10][intlit, 0, 10][rsqbr, ], 10][lsqbr, [, 10][intlit, 1, 10][rsqbr, ], 10][lsqbr, [, 10][intlit, 0, 10][rsqbr, ], 10][rpar, ), 10][semi, ;, 10]
[write, write, 11][lpar, (, 11][intlit, 0, 11][rpar, ), 11][semi, ;, 11]
[write, write, 12][lpar, (, 12][id, p, 12][lsqbr, [, 12][intlit, 2, 12][rsqbr, ], 12][lsqbr, [, 12][intlit, 2, 12][rsqbr, ], 12][lsqbr, [, 12][intlit, 2, 12][rsqbr, ], 12][lsqbr, [, 12][intlit, 1, 12][rsqbr, ], 12][rpar, ), 12][semi, ;, 12]
[write, write, 13][lpar, (, 13][intlit, 0, 13][rpar, ), 13][semi, ;, 13]
[id, z, 14][equal, =, 14][intlit, 33, 14][semi, ;, 14]
[write, write, 15][lpar, (, 15][id, z, 15][rpar, ), 15][semi, ;, 15]
[write, write, 16][lpar, (, 16][intlit, 0, 16][rpar, ), 16][semi, ;, 16]
[write, write, 17][lpar, (, 17][id, p, 17][lsqbr, [, 17][intlit, 1, 17][rsqbr, ], 17][lsqbr, [, 17][intlit, 0, 17][rsqbr, ], 17][lsqbr, [, 17][intlit, 1, 17][rsqbr, ], 17][lsqbr, [, 17][intlit, 0, 17][rsqbr, ], 17][rpar, ), 17][semi, ;, 17]
[id, z, 18][equal, =, 18][intlit, 1, 18][or, or, 18][intlit, 1, 18][semi, ;, 18]
[id, z, 19][equal, =, 19][intlit, 1, 19][semi, ;, 19]
[localvar, localvar, 20][id, x, 20][colon, :, 20][integer, integer, 20][semi, ;, 20]
[id, x, 21][equal, =, 21][intlit, 0, 21][semi, ;, 21]
[while, while, 22][lpar, (, 22][id, z, 22][lt, <, 22][intlit, 12, 22][rpar, ), 22][lcurbr, {, 22]
[id, x, 23][equal, =, 23][id, x, 23][plus, +, 23][id, z, 23][semi, ;, 23]
[id, z, 24][equal, =, 24][id, z, 24][plus, +, 24][intlit, 1, 24][semi, ;, 24]
[rcurbr, }, 25][semi, ;, 25]
[write, write, 26][lpar, (, 26][id, x, 26][rpar, ), 26][semi, ;, 26]
[rcurbr, }, 27]

[blockcmt, /*class human isa person{\n public attribute house:integer[2][3];\n  public attribute housea:integer[2][3];\n   public attribute houseb:integer[2][3];\n 	public constructor: (A: integer, B: integer);\n  public function evaluate: (x: integer) => integer;  \n};\nclass person{\n   public attribute abode:integer;\n   public function reason: (x: integer) => animal;  \n};\nfunction human::constructor(A: integer, B: integer)\n  {\n    localvar new_function : human;\n    return (new_function);\n  }\n  function human::evaluate(x:integer) =>integer\n  {\n    localvar p: integer;\n    localvar y: integer;\n    localvar z: integer;\n    z=x+y+1;\n    return (z);\n  }\n   function person::reason(x:integer) =>animal\n  {\n    localvar p: integer;\n    localvar y: integer;\n    localvar z: integer;\n    z=x+y+1;\n    localvar an:animal;\n    return (an);\n  }\n  class animal{\n     public attribute abode:integer[1][3];\n  };*/, 64]

[blockcmt, /*class human{\n  attribute b:car;\n};\nclass car{\n  attribute c:plane[22];\n};\n\nclass plane{\n    attribute e:integer;\n};*/, 75]


[blockcmt, /*class F{\n public attribute wordvar:integer;\n};\n\nclass D {\n      public attribute var:integer;\n       public attribute ane:E;\n      public attribute varnew:integer[2][3];\n};\nclass C isa D,F{\n    public attribute op:integer;\n    public attribute nop:integer;\n};\n\nclass A isa C{\npublic attribute x:integer;\npublic attribute accessible:integer;\n};\n\nclass E isa r{\n    private attribute memb:integer;\n    private attribute memc:integer[11][11];\n};\n\nclass r{\n\n};*/, 104]
[blockcmt, /*\nfunction side(io:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float,z:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n\n}\nfunction E::evaluate(x: float) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }\n  function E::evaluate(x: integer) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }*/, 142]

