[function, function, 1][id, main, 1][lpar, (, 1][rpar, ), 1][arrow, =>, 1][void, void, 1][lcurbr, {, 1]
[localvar, localvar, 2][id, p, 2][colon, :, 2][integer, integer, 2][lsqbr, [, 2][intlit, 5, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 5, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 3, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 1, 2][rsqbr, ], 2][semi, ;, 2]
[localvar, localvar, 3][id, z, 3][colon, :, 3][integer, integer, 3][semi, ;, 3]
[id, z, 4][equal, =, 4][intlit, 112, 4][semi, ;, 4]
[id, p, 5][lsqbr, [, 5][intlit, 1, 5][rsqbr, ], 5][lsqbr, [, 5][intlit, 0, 5][rsqbr, ], 5][lsqbr, [, 5][intlit, 1, 5][rsqbr, ], 5][lsqbr, [, 5][intlit, 0, 5][rsqbr, ], 5][equal, =, 5][intlit, 12, 5][semi, ;, 5]
[id, p, 6][lsqbr, [, 6][intlit, 3, 6][rsqbr, ], 6][lsqbr, [, 6][intlit, 1, 6][rsqbr, ], 6][lsqbr, [, 6][intlit, 0, 6][rsqbr, ], 6][lsqbr, [, 6][intlit, 1, 6][rsqbr, ], 6][equal, =, 6][intlit, 13, 6][semi, ;, 6]
[id, p, 7][lsqbr, [, 7][intlit, 2, 7][rsqbr, ], 7][lsqbr, [, 7][intlit, 2, 7][rsqbr, ], 7][lsqbr, [, 7][intlit, 1, 7][rsqbr, ], 7][lsqbr, [, 7][intlit, 0, 7][rsqbr, ], 7][equal, =, 7][intlit, 14, 7][semi, ;, 7]
[id, p, 8][lsqbr, [, 8][intlit, 1, 8][rsqbr, ], 8][lsqbr, [, 8][intlit, 3, 8][rsqbr, ], 8][lsqbr, [, 8][intlit, 2, 8][rsqbr, ], 8][lsqbr, [, 8][intlit, 1, 8][rsqbr, ], 8][equal, =, 8][intlit, 15, 8][semi, ;, 8]
[id, p, 9][lsqbr, [, 9][intlit, 3, 9][rsqbr, ], 9][lsqbr, [, 9][intlit, 4, 9][rsqbr, ], 9][lsqbr, [, 9][intlit, 3, 9][rsqbr, ], 9][lsqbr, [, 9][intlit, 0, 9][rsqbr, ], 9][equal, =, 9][intlit, 16, 9][semi, ;, 9]
[write, write, 10][lpar, (, 10][id, p, 10][lsqbr, [, 10][intlit, 1, 10][rsqbr, ], 10][lsqbr, [, 10][intlit, 0, 10][rsqbr, ], 10][lsqbr, [, 10][intlit, 1, 10][rsqbr, ], 10][lsqbr, [, 10][intlit, 0, 10][rsqbr, ], 10][rpar, ), 10][semi, ;, 10]
[write, write, 11][lpar, (, 11][id, p, 11][lsqbr, [, 11][intlit, 3, 11][rsqbr, ], 11][lsqbr, [, 11][intlit, 1, 11][rsqbr, ], 11][lsqbr, [, 11][intlit, 0, 11][rsqbr, ], 11][lsqbr, [, 11][intlit, 1, 11][rsqbr, ], 11][rpar, ), 11][semi, ;, 11]
[write, write, 12][lpar, (, 12][id, p, 12][lsqbr, [, 12][intlit, 2, 12][rsqbr, ], 12][lsqbr, [, 12][intlit, 2, 12][rsqbr, ], 12][lsqbr, [, 12][intlit, 1, 12][rsqbr, ], 12][lsqbr, [, 12][intlit, 0, 12][rsqbr, ], 12][rpar, ), 12][semi, ;, 12]
[write, write, 13][lpar, (, 13][id, p, 13][lsqbr, [, 13][intlit, 1, 13][rsqbr, ], 13][lsqbr, [, 13][intlit, 3, 13][rsqbr, ], 13][lsqbr, [, 13][intlit, 2, 13][rsqbr, ], 13][lsqbr, [, 13][intlit, 1, 13][rsqbr, ], 13][rpar, ), 13][semi, ;, 13]
[write, write, 14][lpar, (, 14][id, p, 14][lsqbr, [, 14][intlit, 3, 14][rsqbr, ], 14][lsqbr, [, 14][intlit, 4, 14][rsqbr, ], 14][lsqbr, [, 14][intlit, 3, 14][rsqbr, ], 14][lsqbr, [, 14][intlit, 0, 14][rsqbr, ], 14][rpar, ), 14][semi, ;, 14]

[rcurbr, }, 16]

[blockcmt, /*class human{\n  attribute b:car;\n};\nclass car{\n  attribute c:plane[22];\n};\n\nclass plane{\n    attribute e:integer;\n};*/, 27]


[blockcmt, /*class F{\n private attribute wordvar:integer;\n};\n\nclass D {\n    private attribute var:integer;\n      private attribute varnew:integer[2][3][4];\n};\nclass C isa D,F{\n    private attribute op:integer;\n    public attribute nop:integer;\n};\n\nclass A isa C{\nprivate attribute x:integer;\npublic attribute accessible:integer;\n};\n\nclass E {\n    private attribute op:integer[9];\n    public attribute nop:integer[10][4][3][3];\n    private attribute mema:D;\n    private attribute memb:A;\n    private attribute memc:A[11][11];\n    public function evaluate: (x: float) => float;   \n     public function evaluate: (x: integer) => float;   \n};\n\nfunction side(io:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float,z:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n\n}\nfunction E::evaluate(x: float) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }\n  function E::evaluate(x: integer) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }*/, 94]

