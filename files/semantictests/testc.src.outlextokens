[function, function, 1][id, main, 1][lpar, (, 1][id, y, 1][colon, :, 1][integer, integer, 1][rpar, ), 1][arrow, =>, 1][void, void, 1][lcurbr, {, 1]
[localvar, localvar, 2][id, x, 2][colon, :, 2][integer, integer, 2][semi, ;, 2]
[id, x, 3][equal, =, 3][intlit, 102, 3][semi, ;, 3]
[write, write, 4][lpar, (, 4][id, x, 4][rpar, ), 4][semi, ;, 4]
[write, write, 5][lpar, (, 5][id, x, 5][rpar, ), 5][semi, ;, 5]
[rcurbr, }, 6]
[blockcmt, /*function side(r:integer)=>man{\n  localvar x:integer;\n  x=123;\n  write(x);\n}*/, 11]
[class, class, 12][id, man, 12][lcurbr, {, 12]
[private, private, 13][attribute, attribute, 13][id, age, 13][colon, :, 13][integer, integer, 13][semi, ;, 13]
[private, private, 14][attribute, attribute, 14][id, ageb, 14][colon, :, 14][integer, integer, 14][semi, ;, 14]
[private, private, 15][attribute, attribute, 15][id, agec, 15][colon, :, 15][integer, integer, 15][semi, ;, 15]
[rcurbr, }, 16][semi, ;, 16]

[blockcmt, /*class human isa person{\n public attribute house:integer[2][3];\n  public attribute housea:integer[2][3];\n   public attribute houseb:integer[2][3];\n 	public constructor: (A: integer, B: integer);\n  public function evaluate: (x: integer) => integer;  \n};\nclass person{\n   public attribute abode:integer;\n   public function reason: (x: integer) => animal;  \n};\nfunction human::constructor(A: integer, B: integer)\n  {\n    localvar new_function : human;\n    return (new_function);\n  }\n  function human::evaluate(x:integer) =>integer\n  {\n    localvar p: integer;\n    localvar y: integer;\n    localvar z: integer;\n    z=x+y+1;\n    return (z);\n  }\n   function person::reason(x:integer) =>animal\n  {\n    localvar p: integer;\n    localvar y: integer;\n    localvar z: integer;\n    z=x+y+1;\n    localvar an:animal;\n    return (an);\n  }\n  class animal{\n     public attribute abode:integer[1][3];\n  };*/, 53]

[blockcmt, /*class human{\n  attribute b:car;\n};\nclass car{\n  attribute c:plane[22];\n};\n\nclass plane{\n    attribute e:integer;\n};*/, 64]


[blockcmt, /*class F{\n public attribute wordvar:integer;\n};\n\nclass D {\n      public attribute var:integer;\n       public attribute ane:E;\n      public attribute varnew:integer[2][3];\n};\nclass C isa D,F{\n    public attribute op:integer;\n    public attribute nop:integer;\n};\n\nclass A isa C{\npublic attribute x:integer;\npublic attribute accessible:integer;\n};\n\nclass E isa r{\n    private attribute memb:integer;\n    private attribute memc:integer[11][11];\n};\n\nclass r{\n\n};*/, 93]
[blockcmt, /*\nfunction side(io:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float,z:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n\n}\nfunction E::evaluate(x: float) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }\n  function E::evaluate(x: integer) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }*/, 131]

