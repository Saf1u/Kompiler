[function, function, 1][id, main, 1][lpar, (, 1][id, y, 1][colon, :, 1][integer, integer, 1][lsqbr, [, 1][intlit, 10, 1][rsqbr, ], 1][rpar, ), 1][arrow, =>, 1][integer, integer, 1][lcurbr, {, 1]
[localvar, localvar, 2][id, p, 2][colon, :, 2][integer, integer, 2][lsqbr, [, 2][intlit, 5, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 5, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 3, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 1, 2][rsqbr, ], 2][semi, ;, 2]
[localvar, localvar, 3][id, z, 3][colon, :, 3][integer, integer, 3][semi, ;, 3]
[blockcmt, /*z=1;\n  write(z);\n  z=((1+93+1+10+9+(33+2*2)*(60/3))/2)+(1*4/2+9)+(100*5);\n  write(z);\n  p[1][0][1][0]=z;\n  p[2][2][2][1]=z+2;\n  write(p[1][0][1][0]);\n  write(0);\n  write(p[2][2][2][1]);\n  write(0);\n  z=33;\n  write(z);\n  write(0);\n  write(p[1][0][1][0]);\n  z=1 or 1;\n  z=1;*/, 19]
[localvar, localvar, 20][id, x, 20][colon, :, 20][integer, integer, 20][semi, ;, 20]
[localvar, localvar, 21][id, j, 21][colon, :, 21][integer, integer, 21][semi, ;, 21]
[id, x, 22][equal, =, 22][intlit, 0, 22][semi, ;, 22]
[id, z, 23][equal, =, 23][intlit, 1, 23][semi, ;, 23]
[while, while, 24][lpar, (, 24][id, z, 24][lt, <, 24][intlit, 50, 24][rpar, ), 24][lcurbr, {, 24]
[id, z, 25][equal, =, 25][id, z, 25][plus, +, 25][intlit, 1, 25][semi, ;, 25]
[if, if, 26][lpar, (, 26][id, z, 26][leq, <=, 26][intlit, 20, 26][rpar, ), 26][then, then, 26][lcurbr, {, 26]
[write, write, 27][lpar, (, 27][intlit, 200, 27][rpar, ), 27][semi, ;, 27]
[rcurbr, }, 28][else, else, 28][lcurbr, {, 28]
[if, if, 29][lpar, (, 29][id, z, 29][eq, ==, 29][intlit, 50, 29][rpar, ), 29][then, then, 29]
[write, write, 30][lpar, (, 30][intlit, 5000, 30][rpar, ), 30][semi, ;, 30][else, else, 30][lcurbr, {, 30]
[id, j, 31][equal, =, 31][intlit, 10, 31][semi, ;, 31]
[while, while, 32][lpar, (, 32][id, j, 32][neq, <>, 32][intlit, 100, 32][rpar, ), 32][lcurbr, {, 32]
[write, write, 33][lpar, (, 33][id, j, 33][rpar, ), 33][semi, ;, 33]
[id, j, 34][equal, =, 34][id, j, 34][plus, +, 34][intlit, 10, 34][semi, ;, 34]
[rcurbr, }, 35][semi, ;, 35]
[rcurbr, }, 36][semi, ;, 36]
[rcurbr, }, 37][semi, ;, 37]
[rcurbr, }, 38][semi, ;, 38]
[rcurbr, }, 39]

[blockcmt, /*class human isa person{\n public attribute house:integer[2][3];\n  public attribute housea:integer[2][3];\n   public attribute houseb:integer[2][3];\n 	public constructor: (A: integer, B: integer);\n  public function evaluate: (x: integer) => integer;  \n};\nclass person{\n   public attribute abode:integer;\n   public function reason: (x: integer) => animal;  \n};\nfunction human::constructor(A: integer, B: integer)\n  {\n    localvar new_function : human;\n    return (new_function);\n  }\n  function human::evaluate(x:integer) =>integer\n  {\n    localvar p: integer;\n    localvar y: integer;\n    localvar z: integer;\n    z=x+y+1;\n    return (z);\n  }\n   function person::reason(x:integer) =>animal\n  {\n    localvar p: integer;\n    localvar y: integer;\n    localvar z: integer;\n    z=x+y+1;\n    localvar an:animal;\n    return (an);\n  }\n  class animal{\n     public attribute abode:integer[1][3];\n  };*/, 76]

[blockcmt, /*class human{\n  attribute b:car;\n};\nclass car{\n  attribute c:plane[22];\n};\n\nclass plane{\n    attribute e:integer;\n};*/, 87]


[blockcmt, /*class F{\n public attribute wordvar:integer;\n};\n\nclass D {\n      public attribute var:integer;\n       public attribute ane:E;\n      public attribute varnew:integer[2][3];\n};\nclass C isa D,F{\n    public attribute op:integer;\n    public attribute nop:integer;\n};\n\nclass A isa C{\npublic attribute x:integer;\npublic attribute accessible:integer;\n};\n\nclass E isa r{\n    private attribute memb:integer;\n    private attribute memc:integer[11][11];\n};\n\nclass r{\n\n};*/, 116]
[blockcmt, /*\nfunction side(io:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float,z:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n\n}\nfunction E::evaluate(x: float) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }\n  function E::evaluate(x: integer) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }*/, 154]

