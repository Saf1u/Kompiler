[function, function, 1][id, main, 1][lpar, (, 1][rpar, ), 1][arrow, =>, 1][void, void, 1][lcurbr, {, 1]
[inlinecmt, //localvar p:integer[5][5][3][1];, 2]
[localvar, localvar, 3][id, z, 3][colon, :, 3][integer, integer, 3][semi, ;, 3]
[id, z, 4][equal, =, 4][lpar, (, 4][lpar, (, 4][intlit, 1, 4][plus, +, 4][intlit, 93, 4][plus, +, 4][intlit, 1, 4][plus, +, 4][intlit, 10, 4][plus, +, 4][intlit, 9, 4][plus, +, 4][lpar, (, 4][intlit, 33, 4][plus, +, 4][intlit, 2, 4][mult, *, 4][intlit, 2, 4][rpar, ), 4][mult, *, 4][lpar, (, 4][intlit, 60, 4][div, /, 4][intlit, 3, 4][rpar, ), 4][rpar, ), 4][div, /, 4][intlit, 2, 4][rpar, ), 4][plus, +, 4][lpar, (, 4][intlit, 1, 4][mult, *, 4][intlit, 4, 4][div, /, 4][intlit, 2, 4][plus, +, 4][intlit, 9, 4][rpar, ), 4][plus, +, 4][lpar, (, 4][intlit, 100, 4][mult, *, 4][intlit, 5, 4][rpar, ), 4][semi, ;, 4]
[blockcmt, /*p[1][0][1][0]=z;\n write(p[1][0][1][0]);\n write(0);\n z=33;\n write(z);\n write(0);\n  write(p[1][0][1][0]);*/, 11]
[id, z, 12][equal, =, 12][intlit, 1, 12][and, and, 12][intlit, 1, 12][semi, ;, 12]
[id, z, 13][equal, =, 13][not, not, 13][intlit, 0, 13][semi, ;, 13]
[write, write, 14][lpar, (, 14][id, z, 14][rpar, ), 14][semi, ;, 14]

[rcurbr, }, 16]

[blockcmt, /*class human{\n  attribute b:car;\n};\nclass car{\n  attribute c:plane[22];\n};\n\nclass plane{\n    attribute e:integer;\n};*/, 27]


[blockcmt, /*class F{\n private attribute wordvar:integer;\n};\n\nclass D {\n    private attribute var:integer;\n      private attribute varnew:integer[2][3][4];\n};\nclass C isa D,F{\n    private attribute op:integer;\n    public attribute nop:integer;\n};\n\nclass A isa C{\nprivate attribute x:integer;\npublic attribute accessible:integer;\n};\n\nclass E {\n    private attribute op:integer[9];\n    public attribute nop:integer[10][4][3][3];\n    private attribute mema:D;\n    private attribute memb:A;\n    private attribute memc:A[11][11];\n    public function evaluate: (x: float) => float;   \n     public function evaluate: (x: integer) => float;   \n};\n\nfunction side(io:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float,z:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n\n}\nfunction E::evaluate(x: float) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }\n  function E::evaluate(x: integer) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }*/, 94]

