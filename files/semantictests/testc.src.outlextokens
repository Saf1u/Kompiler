[function, function, 1][id, main, 1][lpar, (, 1][id, r, 1][colon, :, 1][integer, integer, 1][lsqbr, [, 1][intlit, 10, 1][rsqbr, ], 1][lsqbr, [, 1][intlit, 10, 1][rsqbr, ], 1][rpar, ), 1][arrow, =>, 1][void, void, 1][lcurbr, {, 1]
[localvar, localvar, 2][id, p, 2][colon, :, 2][integer, integer, 2][lsqbr, [, 2][intlit, 10, 2][rsqbr, ], 2][lsqbr, [, 2][intlit, 10, 2][rsqbr, ], 2][semi, ;, 2]
[localvar, localvar, 3][id, x, 3][colon, :, 3][integer, integer, 3][semi, ;, 3]
[localvar, localvar, 4][id, z, 4][colon, :, 4][integer, integer, 4][semi, ;, 4]
[id, x, 5][equal, =, 5][intlit, 0, 5][semi, ;, 5]
[while, while, 6][lpar, (, 6][id, x, 6][neq, <>, 6][intlit, 10, 6][rpar, ), 6][lcurbr, {, 6]
[id, z, 7][equal, =, 7][intlit, 0, 7][semi, ;, 7]
[while, while, 8][lpar, (, 8][id, z, 8][neq, <>, 8][intlit, 10, 8][rpar, ), 8][lcurbr, {, 8]
[id, p, 9][lsqbr, [, 9][id, x, 9][rsqbr, ], 9][lsqbr, [, 9][id, z, 9][rsqbr, ], 9][equal, =, 9][id, z, 9][semi, ;, 9]
[id, z, 10][equal, =, 10][id, z, 10][plus, +, 10][intlit, 1, 10][semi, ;, 10]
[rcurbr, }, 11][semi, ;, 11]
[id, x, 12][equal, =, 12][id, x, 12][plus, +, 12][intlit, 1, 12][semi, ;, 12]
[rcurbr, }, 13][semi, ;, 13]


[id, x, 16][equal, =, 16][intlit, 0, 16][semi, ;, 16]
[localvar, localvar, 17][id, j, 17][colon, :, 17][integer, integer, 17][semi, ;, 17]
[id, j, 18][equal, =, 18][intlit, 1, 18][semi, ;, 18]
[while, while, 19][lpar, (, 19][id, x, 19][neq, <>, 19][intlit, 10, 19][rpar, ), 19][lcurbr, {, 19]
[id, z, 20][equal, =, 20][intlit, 0, 20][semi, ;, 20]
[while, while, 21][lpar, (, 21][id, z, 21][neq, <>, 21][intlit, 10, 21][rpar, ), 21][lcurbr, {, 21]
[id, p, 22][lsqbr, [, 22][id, x, 22][rsqbr, ], 22][lsqbr, [, 22][id, z, 22][rsqbr, ], 22][equal, =, 22][id, p, 22][lsqbr, [, 22][id, x, 22][rsqbr, ], 22][lsqbr, [, 22][id, z, 22][rsqbr, ], 22][plus, +, 22][lpar, (, 22][intlit, 10, 22][mult, *, 22][id, x, 22][rpar, ), 22][semi, ;, 22]
[id, z, 23][equal, =, 23][id, z, 23][plus, +, 23][intlit, 1, 23][semi, ;, 23]
[rcurbr, }, 24][semi, ;, 24]
[id, x, 25][equal, =, 25][id, x, 25][plus, +, 25][intlit, 1, 25][semi, ;, 25]
[rcurbr, }, 26][semi, ;, 26]

[id, x, 28][equal, =, 28][intlit, 0, 28][semi, ;, 28]
[while, while, 29][lpar, (, 29][id, x, 29][neq, <>, 29][intlit, 10, 29][rpar, ), 29][lcurbr, {, 29]
[id, z, 30][equal, =, 30][intlit, 0, 30][semi, ;, 30]
[while, while, 31][lpar, (, 31][id, z, 31][neq, <>, 31][intlit, 10, 31][rpar, ), 31][lcurbr, {, 31]
[write, write, 32][lpar, (, 32][id, p, 32][lsqbr, [, 32][id, x, 32][rsqbr, ], 32][lsqbr, [, 32][id, z, 32][rsqbr, ], 32][rpar, ), 32][semi, ;, 32]
[id, z, 33][equal, =, 33][id, z, 33][plus, +, 33][intlit, 1, 33][semi, ;, 33]
[rcurbr, }, 34][semi, ;, 34]
[id, x, 35][equal, =, 35][id, x, 35][plus, +, 35][intlit, 1, 35][semi, ;, 35]
[rcurbr, }, 36][semi, ;, 36]
[rcurbr, }, 37]
[blockcmt, /*function side(r:integer)=>man{\n  localvar x:integer;\n  x=123;\n  write(x);\n}*/, 42]
[blockcmt, /*class man{\nprivate attribute age:integer;\nprivate attribute ageb:integer;\nprivate attribute agec:integer;\n};*/, 47]

[blockcmt, /*class human isa person{\n public attribute house:integer[2][3];\n  public attribute housea:integer[2][3];\n   public attribute houseb:integer[2][3];\n 	public constructor: (A: integer, B: integer);\n  public function evaluate: (x: integer) => integer;  \n};\nclass person{\n   public attribute abode:integer;\n   public function reason: (x: integer) => animal;  \n};\nfunction human::constructor(A: integer, B: integer)\n  {\n    localvar new_function : human;\n    return (new_function);\n  }\n  function human::evaluate(x:integer) =>integer\n  {\n    localvar p: integer;\n    localvar y: integer;\n    localvar z: integer;\n    z=x+y+1;\n    return (z);\n  }\n   function person::reason(x:integer) =>animal\n  {\n    localvar p: integer;\n    localvar y: integer;\n    localvar z: integer;\n    z=x+y+1;\n    localvar an:animal;\n    return (an);\n  }\n  class animal{\n     public attribute abode:integer[1][3];\n  };*/, 84]

[blockcmt, /*class human{\n  attribute b:car;\n};\nclass car{\n  attribute c:plane[22];\n};\n\nclass plane{\n    attribute e:integer;\n};*/, 95]


[blockcmt, /*class F{\n public attribute wordvar:integer;\n};\n\nclass D {\n      public attribute var:integer;\n       public attribute ane:E;\n      public attribute varnew:integer[2][3];\n};\nclass C isa D,F{\n    public attribute op:integer;\n    public attribute nop:integer;\n};\n\nclass A isa C{\npublic attribute x:integer;\npublic attribute accessible:integer;\n};\n\nclass E isa r{\n    private attribute memb:integer;\n    private attribute memc:integer[11][11];\n};\n\nclass r{\n\n};*/, 124]
[blockcmt, /*\nfunction side(io:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n  localvar z: integer[10];\n  localvar x: integer[2][3][3];\n  localvar y: integer;\n  n=(x[2][3][34]*y)+z[7]+1*3*300+2;\n\n \n}\nfunction side(io:float,z:integer)=>void{\n  localvar n: integer;\n  localvar p:E[10];\n\n}\nfunction E::evaluate(x: float) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }\n  function E::evaluate(x: integer) => float\n  {\n     localvar n: integer;\n  localvar p:E[10];\n    return (0);\n  }*/, 162]

