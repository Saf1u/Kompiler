[function, function, 1][id, main, 1][lpar, (, 1][rpar, ), 1][arrow, =>, 1][void, void, 1][lcurbr, {, 1]
[localvar, localvar, 2][id, x, 2][colon, :, 2][integer, integer, 2][semi, ;, 2]
[write, write, 3][lpar, (, 3][id, x, 3][rpar, ), 3][semi, ;, 3]
[id, x, 4][equal, =, 4][id, factorial, 4][lpar, (, 4][intlit, 14, 4][rpar, ), 4][semi, ;, 4]
[write, write, 5][lpar, (, 5][id, x, 5][rpar, ), 5][semi, ;, 5]

[rcurbr, }, 7]

[function, function, 9][id, factorial, 9][lpar, (, 9][id, n, 9][colon, :, 9][integer, integer, 9][rpar, ), 9][arrow, =>, 9][integer, integer, 9][lcurbr, {, 9]
[if, if, 10][lpar, (, 10][id, n, 10][eq, ==, 10][intlit, 0, 10][rpar, ), 10][then, then, 10][lcurbr, {, 10]
[return, return, 11][lpar, (, 11][intlit, 1, 11][rpar, ), 11][semi, ;, 11]
[rcurbr, }, 12][else, else, 12][lcurbr, {, 12]
[return, return, 13][lpar, (, 13][id, n, 13][mult, *, 13][id, factorial, 13][lpar, (, 13][id, n, 13][minus, -, 13][intlit, 1, 13][rpar, ), 13][rpar, ), 13][semi, ;, 13]
[rcurbr, }, 14][semi, ;, 14]
[rcurbr, }, 15]



[blockcmt, /*class man{\nprivate attribute x:integer;\nprivate attribute y:integer;\nprivate attribute z:integer;\n};*/, 23]
