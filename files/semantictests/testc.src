function main(y:integer)=>void{
  localvar x:integer;
  x=102;
  write(x);
  write(x);
}
/*function side(r:integer)=>man{
  localvar x:integer;
  x=123;
  write(x);
}*/
class man{
private attribute age:integer;
private attribute ageb:integer;
private attribute agec:integer;
};

/*class human isa person{
 public attribute house:integer[2][3];
  public attribute housea:integer[2][3];
   public attribute houseb:integer[2][3];
 	public constructor: (A: integer, B: integer);
  public function evaluate: (x: integer) => integer;  
};
class person{
   public attribute abode:integer;
   public function reason: (x: integer) => animal;  
};
function human::constructor(A: integer, B: integer)
  {
    localvar new_function : human;
    return (new_function);
  }
  function human::evaluate(x:integer) =>integer
  {
    localvar p: integer;
    localvar y: integer;
    localvar z: integer;
    z=x+y+1;
    return (z);
  }
   function person::reason(x:integer) =>animal
  {
    localvar p: integer;
    localvar y: integer;
    localvar z: integer;
    z=x+y+1;
    localvar an:animal;
    return (an);
  }
  class animal{
     public attribute abode:integer[1][3];
  };*/

/*class human{
  attribute b:car;
};
class car{
  attribute c:plane[22];
};

class plane{
    attribute e:integer;
};*/


/*class F{
 public attribute wordvar:integer;
};

class D {
      public attribute var:integer;
       public attribute ane:E;
      public attribute varnew:integer[2][3];
};
class C isa D,F{
    public attribute op:integer;
    public attribute nop:integer;
};

class A isa C{
public attribute x:integer;
public attribute accessible:integer;
};

class E isa r{
    private attribute memb:integer;
    private attribute memc:integer[11][11];
};

class r{

};*/
/*
function side(io:integer)=>void{
  localvar n: integer;
  localvar p:E[10];
  localvar z: integer[10];
  localvar x: integer[2][3][3];
  localvar y: integer;
  n=(x[2][3][34]*y)+z[7]+1*3*300+2;

 
}
function side(io:float)=>void{
  localvar n: integer;
  localvar p:E[10];
  localvar z: integer[10];
  localvar x: integer[2][3][3];
  localvar y: integer;
  n=(x[2][3][34]*y)+z[7]+1*3*300+2;

 
}
function side(io:float,z:integer)=>void{
  localvar n: integer;
  localvar p:E[10];

}
function E::evaluate(x: float) => float
  {
     localvar n: integer;
  localvar p:E[10];
    return (0);
  }
  function E::evaluate(x: integer) => float
  {
     localvar n: integer;
  localvar p:E[10];
    return (0);
  }*/
