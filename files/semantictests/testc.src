function main()=>void{
  localvar a: human[2][3];
  localvar x:car;
  //n=(x[2][3][34]*y)+z[7]+1*3*300+2;
a[1][2].b.c[1].e=4;
//x=a[1][2].b;
 
}

class human{
  attribute b:car;
};
class car{
  attribute c:plane[22];
};

class plane{
    attribute e:integer;
};


/*class F{
 private attribute wordvar:integer;
};

class D {
    private attribute var:integer;
      private attribute varnew:integer[2][3][4];
};
class C isa D,F{
    private attribute op:integer;
    public attribute nop:integer;
};

class A isa C{
private attribute x:integer;
public attribute accessible:integer;
};

class E {
    private attribute op:integer[9];
    public attribute nop:integer[10][4][3][3];
    private attribute mema:D;
    private attribute memb:A;
    private attribute memc:A[11][11];
    public function evaluate: (x: float) => float;   
     public function evaluate: (x: integer) => float;   
};

function side(io:integer)=>void{
  localvar n: integer;
  localvar p:E[10];
  localvar z: integer[10];
  localvar x: integer[2][3][3];
  localvar y: integer;
  n=(x[2][3][34]*y)+z[7]+1*3*300+2;

 
}
function side(io:float)=>void{
  localvar n: integer;
  localvar p:E[10];
  localvar z: integer[10];
  localvar x: integer[2][3][3];
  localvar y: integer;
  n=(x[2][3][34]*y)+z[7]+1*3*300+2;

 
}
function side(io:float,z:integer)=>void{
  localvar n: integer;
  localvar p:E[10];

}
function E::evaluate(x: float) => float
  {
     localvar n: integer;
  localvar p:E[10];
    return (0);
  }
  function E::evaluate(x: integer) => float
  {
     localvar n: integer;
  localvar p:E[10];
    return (0);
  }*/
