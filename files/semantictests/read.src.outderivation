 REPTSTART0
 CLASSDECLORFUNCDEF REPTSTART0
 FUNCDEF REPTSTART0
 FUNCHEAD FUNCBODY REPTSTART0
 function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function main S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function main S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void S2E FUNCBODY REPTSTART0
function main ( ) => void S2E FUNCBODY REPTSTART0
function main ( ) => void lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; LOCALVARDECL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar id S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res S1 colon TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : TYPE S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer S2 LOCALVARDECLPRIME S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer S3 REPTLOCALVARDECL4 S6 semi S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; S7 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read S25 lpar VARIABLE rpar S26 semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read S25 lpar VARIABLE rpar S26 semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( VARIABLE rpar S26 semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( id S1 VARPRIME rpar S26 semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x S1 VARPRIME rpar S26 semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x S3 S9 S10 rpar S26 semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) S26 semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while lpar MYRELEXPRCONSTRUCT rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while lpar MYRELEXPRCONSTRUCT rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( MYRELEXPRCONSTRUCT rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( ARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( TERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x gt S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > TERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > FACTOR RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > SIGN S16 FACTOR S15 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > minus S16 FACTOR S15 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - S16 FACTOR S15 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - intlit S5 S15 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 S5 S15 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) lcurbr REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { STATEMENT REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { VARIABLEASSIGNORFUNCCALL REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res S1 VARIABLEASSIGNORFUNCCALLPRIME REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res S3 S9 S10 ASSIGNOP EXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res equal EXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = EXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = ARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = TERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial VARIABLEORFUNCPRIME1 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial S3 lpar APARAMS rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( APARAMS rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) S22 S29 VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; S27 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; STATEMENT REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write lpar EXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write lpar EXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( EXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( ARITHEXPR RELEXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) semi S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; S30 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; STATEMENT REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read S25 lpar VARIABLE rpar S26 semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read S25 lpar VARIABLE rpar S26 semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( VARIABLE rpar S26 semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( id S1 VARPRIME rpar S26 semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x S1 VARPRIME rpar S26 semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x S3 S9 S10 rpar S26 semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) S26 semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } CLASSDECLORFUNCDEF REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } FUNCDEF REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } FUNCHEAD FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( FPARAMS S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) arrow RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => RETURNTYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => TYPE S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer S2E FUNCBODY REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if lpar MYRELEXPRCONSTRUCT rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if lpar MYRELEXPRCONSTRUCT rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( MYRELEXPRCONSTRUCT rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( ARITHEXPR RELOP S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( TERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n eq S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == S23 ARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == TERM RIGHTRECARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == FACTOR RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 S5 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then S3 STATBLOCK S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then lcurbr REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { STATEMENT REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return lpar EXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return lpar EXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( EXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( ARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) semi S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; S31 REPTSTATBLOCK1 rcurbr S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } S32 else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else S3 STATBLOCK S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else lcurbr REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { STATEMENT REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return lpar EXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return lpar EXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( EXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( ARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( TERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n MULTOP S18 FACTOR S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n mult S18 FACTOR S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * S18 FACTOR S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * VARIABLEORFUNC S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * id S1 VARIABLEORFUNCPRIME S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial S1 VARIABLEORFUNCPRIME S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial VARIABLEORFUNCPRIME1 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial S3 lpar APARAMS rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( APARAMS rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n S3 S9 S10 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n ADDOP S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n minus S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - FACTOR RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - intlit S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) S22 S29 VARIABLEORFUNCPRIME3 S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR rpar semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) semi S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; S31 REPTSTATBLOCK1 rcurbr S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } S32 semi S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; S33 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function main ( ) => void { localvar x : integer ; localvar res : integer ; read ( x ) ; while ( x > - 1 ) { res = factorial ( x ) ; write ( res ) ; read ( x ) ; } ; } function factorial ( n : integer ) => integer { if ( n == 0 ) then { return ( 1 ) ; } else { return ( n * factorial ( n - 1 ) ) ; } ; } S36 REPTSTART0
