 REPTSTART0
 CLASSDECLORFUNCDEF REPTSTART0
 CLASSDECL REPTSTART0
 S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => TYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; CLASSDECLORFUNCDEF REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; CLASSDECL REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float ARRAYSIZE REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float lsqbr ARRAYSIZEPRIME REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ ARRAYSIZEPRIME REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ intlit S5X rsqbr REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 S5X rsqbr REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float ARRAYSIZE REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float lsqbr ARRAYSIZEPRIME REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ARRAYSIZEPRIME REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ rsqbr S4X REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] S4X REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] ARRAYSIZE REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] lsqbr ARRAYSIZEPRIME REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ARRAYSIZEPRIME REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ rsqbr S4X REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] S4X REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor S1 colon S3 lpar FPARAMS rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor S1 colon S3 lpar FPARAMS rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : S3 lpar FPARAMS rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( FPARAMS rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float FPARAMSTAIL REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float comma id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => TYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; CLASSDECLORFUNCDEF REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; CLASSDECL REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; S45 class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class id S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC S1 S3 OPTCLASSDECL2 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL comma id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL comma id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , id S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL S1 REPTOPTCLASSDECL22 S44 lcurbr REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private MEMBERVARDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute id S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c S1 colon TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : TYPE S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float S2 S3 REPTMEMBERVARDECL4 S6 S42 semi REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor S1 colon S3 lpar FPARAMS rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor S1 colon S3 lpar FPARAMS rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : S3 lpar FPARAMS rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( FPARAMS rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float FPARAMSTAIL REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float comma id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float FPARAMSTAIL REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float comma id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 rpar S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) S35 semi S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; S39 S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; VISIBILITY S41 MEMBERDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; MEMBERFUNCDECL REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function id S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate S1 colon S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : S3 lpar FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( FPARAMS rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 rpar S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float ) S35 arrow RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float ) => RETURNTYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float ) => TYPE S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float ) => float S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float ) => float S2 semi S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float ) => float ; S43 REPTCLASSDECL4 rcurbr semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float ) => float ; } semi S46 REPTSTART0
class POLYNOMIAL { public function evaluate : ( x : float ) => float ; } ; class LINEAR isa POLYNOMIAL { private attribute a : float [ 1 ] ; private attribute b : float [ ] [ ] ; private attribute c : float ; public constructor : ( A : float , B : float ) ; public function evaluate : ( x : float ) => float ; } ; class QUADRATIC isa POLYNOMIAL , MONONOMIAL , TRINOMINAL { private attribute a : float ; attribute b : float ; private attribute c : float ; public constructor : ( A : float , B : float , C : float ) ; function evaluate : ( x : float ) => float ; } ; S46 REPTSTART0
