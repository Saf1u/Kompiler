[blockcmt, /* sort the array */, 1]
[inlinecmt, //  localvar i    : poly(x.y[3][4][5][5][6][5].z[3][4][5][5][6][5].n[2][3]);, 2]
[inlinecmt, //poly(make(10+23,9.9,10,a.b[10].c[20][10][11].d).newmake[1][2].oldmake[1],2,make().x.unmake().y[1][3].remake().end), 3]
[function, function, 4][id, bubbleSort, 4][lpar, (, 4][rpar, ), 4][arrow, =>, 4][void, void, 4]
[lcurbr, {, 5]
[inlinecmt, //write(2*3*3*1.2+(3*5)>=3*(2+3)*(4));, 6]
[inlinecmt, //return(call(1,2,3)*2+ida+idb+idc+come(1,3)+a.b[10][20].c[100].d);, 7]
[while, while, 8][lpar, (, 8][intlit, 2, 8][gt, >, 8][intlit, 4, 8][rpar, ), 8][lcurbr, {, 8]
[write, write, 9][lpar, (, 9][intlit, 2, 9][gt, >, 9][intlit, 1, 9][rpar, ), 9][semi, ;, 9]
[write, write, 10][lpar, (, 10][intlit, 2, 10][gt, >, 10][intlit, 1, 10][rpar, ), 10][semi, ;, 10]
[if, if, 11][lpar, (, 11][intlit, 2, 11][gt, >, 11][intlit, 3, 11][rpar, ), 11][then, then, 11][lcurbr, {, 11]
[while, while, 12][lpar, (, 12][intlit, 1, 12][gt, >, 12][intlit, 3, 12][rpar, ), 12][lcurbr, {, 12]
[id, hello, 13][lpar, (, 13][rpar, ), 13][semi, ;, 13]
[id, id, 14][equal, =, 14][intlit, 3, 14][semi, ;, 14]
[id, id, 15][dot, ., 15][id, id, 15][lsqbr, [, 15][intlit, 1, 15][rsqbr, ], 15][equal, =, 15][intlit, 33, 15][semi, ;, 15]
[rcurbr, }, 16][semi, ;, 16]
[rcurbr, }, 17][else, else, 17][lcurbr, {, 17]
[write, write, 18][lpar, (, 18][intlit, 2, 18][gt, >, 18][intlit, 1, 18][rpar, ), 18][semi, ;, 18]
[write, write, 19][lpar, (, 19][intlit, 2, 19][gt, >, 19][intlit, 1, 19][rpar, ), 19][semi, ;, 19]
[rcurbr, }, 20][semi, ;, 20]
[rcurbr, }, 21]
[semi, ;, 22]
[rcurbr, }, 23]




