 REPTSTART0
 CLASSDECLORFUNCDEF REPTSTART0
 FUNCDEF REPTSTART0
 FUNCHEAD FUNCBODY REPTSTART0
 function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function id S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function POLY S40 FUNCSCOPEDFREE FUNCBODY REPTSTART0
function POLY S38 S3 lpar FPARAMS S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( FPARAMS S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( id S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run S1 colon TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : TYPE S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer S2 S3 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer ARRAYSIZE REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer lsqbr ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ intlit S5 rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 S5 rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] ARRAYSIZE REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] lsqbr ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ intlit S5 rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 S5 rsqbr REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] ARRAYSIZE REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] lsqbr ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ARRAYSIZEPRIME REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ rsqbr S4 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] S4 REPTFPARAMS3 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] FPARAMSTAIL REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] comma id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float FPARAMSTAIL REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float comma id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , id S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello S1 colon TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : TYPE S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : id S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red S2 S3 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red ARRAYSIZE REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red lsqbr ARRAYSIZEPRIME REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ ARRAYSIZEPRIME REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ intlit S5 rsqbr REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 S5 rsqbr REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] ARRAYSIZE REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] lsqbr ARRAYSIZEPRIME REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ ARRAYSIZEPRIME REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ intlit S5 rsqbr REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 S5 rsqbr REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] ARRAYSIZE REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] lsqbr ARRAYSIZEPRIME REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ARRAYSIZEPRIME REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ rsqbr S4 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] S4 REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] ARRAYSIZE REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] lsqbr ARRAYSIZEPRIME REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ ARRAYSIZEPRIME REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ intlit S5 rsqbr REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 S5 rsqbr REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] REPTFPARAMSTAIL4 S6 S7 REPTFPARAMS4 S35 rpar arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) arrow RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => RETURNTYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => TYPE S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => id S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red S2 FUNCBODY REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red lcurbr S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { S3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a ASSIGNOP EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a equal EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = ARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = TERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b ASSIGNOP EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b equal EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = ARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = TERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c ASSIGNOP EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c equal EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = ARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = TERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a ASSIGNOP EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a equal EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = EXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = ARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = TERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f VARIABLEORFUNCPRIME1 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f S3 lpar APARAMS S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( APARAMS S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( EXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( ARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a APARAMSTAIL REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a comma EXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , EXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , ARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b APARAMSTAIL REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b comma EXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , EXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , ARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 S22 S11 rpar VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) VARIABLEORFUNCPRIME3 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) MULTOP S18 FACTOR S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) mult S18 FACTOR S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * S18 FACTOR S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * VARIABLEORFUNC S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * id S1 VARIABLEORFUNCPRIME S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b S1 VARIABLEORFUNCPRIME S19 RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b ADDOP S20 TERM S21 RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b plus S20 TERM S21 RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + S20 TERM S21 RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + FACTOR RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + VARIABLEORFUNC RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + id S1 VARIABLEORFUNCPRIME RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c S1 VARIABLEORFUNCPRIME RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR semi S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; S27 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; VARIABLEASSIGNORFUNCCALL REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put S1 VARIABLEASSIGNORFUNCCALLPRIME REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put VARIABLEASSIGNORFUNCCALLPRIME1 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a ADDOP S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a plus S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + FACTOR RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + intlit S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) semi REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; LOCALVARDECLORSTMT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; STATEMENT REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while lpar MYRELEXPRCONSTRUCT rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while lpar MYRELEXPRCONSTRUCT rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( MYRELEXPRCONSTRUCT rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( ARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( TERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 S5 RIGHTRECTERM RIGHTRECARITHEXPR RELOP S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 gt S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > S23 ARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > TERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > FACTOR RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > intlit S5 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 S5 RIGHTRECTERM RIGHTRECARITHEXPR S24 rpar S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) S3 STATBLOCK S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) lcurbr REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { STATEMENT REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { VARIABLEASSIGNORFUNCCALL REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put S1 VARIABLEASSIGNORFUNCCALLPRIME REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put VARIABLEASSIGNORFUNCCALLPRIME1 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a ADDOP S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a plus S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + FACTOR RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + intlit S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; STATEMENT REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; VARIABLEASSIGNORFUNCCALL REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put S1 VARIABLEASSIGNORFUNCCALLPRIME REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put VARIABLEASSIGNORFUNCCALLPRIME1 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a ADDOP S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a plus S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + FACTOR RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + intlit S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; STATEMENT REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; VARIABLEASSIGNORFUNCCALL REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; id S1 VARIABLEASSIGNORFUNCCALLPRIME REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put S1 VARIABLEASSIGNORFUNCCALLPRIME REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put VARIABLEASSIGNORFUNCCALLPRIME1 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put S3 lpar APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( APARAMS rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( EXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( ARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( TERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( FACTOR RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( VARIABLEORFUNC RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( id S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a S1 VARIABLEORFUNCPRIME RIGHTRECTERM RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a ADDOP S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a plus S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + S20 TERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + FACTOR RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + intlit S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + 1 S5 RIGHTRECTERM S21 RIGHTRECARITHEXPR RELEXPR REPTAPARAMS1 rpar S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + 1 ) S22 S29 VARIABLEASSIGNORFUNCCALLPRIME3 REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + 1 ) semi REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + 1 ) ; REPTSTATBLOCK1 rcurbr S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + 1 ) ; } S32 semi S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + 1 ) ; } ; S34 REPTFUNCBODY1 S32 rcurbr S36 REPTSTART0
function POLY ( run : integer [ 2 ] [ 2 ] [ ] , bye : float , hello : red [ 1 ] [ 2 ] [ ] [ 3 ] ) => red { a = 1 ; put ( a ) ; b = 2 ; put ( b ) ; c = 3 ; put ( c ) ; a = f ( a , b , c ) * b + c ; put ( a + 4 ) ; while ( 1 > 2 ) { put ( a + 4 ) ; put ( a + 2 ) ; put ( a + 1 ) ; } ; } S36 REPTSTART0
