// ====== struct declarations ====== //


class POLYNOMIAL {
  public function evaluate: (x: float) => float;
};

class LINEAR isa POLYNOMIAL {
  private attribute a: float;
  private attribute evaluate: float;
  public  constructor: (A: float, B: float[]);
  public  function evaluate: (x: float) => float;
};

class LINEAR isa POLYNOMIAL {
  private attribute a: float;
  private attribute b: float;
  private attribute c: float;
  public  constructor: (A: float, B: float, C: float);
  public  function evaluate: (x: float) => float;
};

function QUADRATIC::constructor(A: float, B: int, C: float[])
{
  self.a = A;
  self.b = B;
  self.c = C;
localvar resulta: float[2];
localvar resultb: float[][];
localvar resultc: color;



}
function main() => void
{
  localvar f1: LINEAR(2, 3.5);
  localvar f2: QUADRATIC(-2.0, 1.0, 0.0);
  localvar counter: integer ;	
  counter = id.id.id.id;

  while(counter <= 10)
  {
    write(counter);
    write(f1.evaluate(counter));
    write(f2.evaluate(counter));
  };
}


function test() => int
{
  localvar f1: LINEAR[2][];
}
