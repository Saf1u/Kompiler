[function, function, 1][id, err, 1][lpar, (, 1][id, arr, 1][colon, :, 1][integer, integer, 1][lsqbr, [, 1][rsqbr, ], 1][comma, ,, 1][id, size, 1][colon, :, 1][integer, integer, 1][rpar, ), 1][arrow, =>, 1][void, void, 1]
[lcurbr, {, 2]
[localvar, localvar, 3][id, n, 3][colon, :, 3][integer, integer, 3][semi, ;, 3]
[localvar, localvar, 4][id, i, 4][colon, :, 4][integer, integer, 4][semi, ;, 4]
[localvar, localvar, 5][id, j, 5][colon, :, 5][integer, integer, 5][semi, ;, 5]
[localvar, localvar, 6][id, temp, 6][colon, :, 6][integer, integer, 6][semi, ;, 6]
[id, n, 7][equal, =, 7][id, size, 7][semi, ;, 7]
[id, i, 8][equal, =, 8][intlit, 0, 8]
[id, j, 9][equal, =, 9][intlit, 0, 9][semi, ;, 9]
[id, temp, 10][equal, =, 10][intlit, 0, 10][semi, ;, 10]
[while, while, 11][lpar, (, 11][id, i, 11][lt, <, 11][id, n, 11][minus, -, 11][intlit, 1, 11][rpar, ), 11][lcurbr, {, 11]
[while, while, 12][lpar, (, 12][id, j, 12][gt, >, 12][id, n, 12][minus, -, 12][id, i, 12][minus, -, 12][intlit, 1, 12][rpar, ), 12][lcurbr, {, 12]
[if, if, 13][lpar, (, 13][id, arr, 13][lsqbr, [, 13][id, j, 13][rsqbr, ], 13][gt, >, 13][id, arr, 13][lsqbr, [, 13][id, j, 13][plus, +, 13][intlit, 1, 13][rsqbr, ], 13][rpar, ), 13]
[then, then, 14][lcurbr, {, 14]
[inlinecmt, // swap temp and arr[i], 15]
[id, temp, 16][eq, ==, 16][id, arr, 16][lsqbr, [, 16][id, j, 16][rsqbr, ], 16][semi, ;, 16]
[id, arr, 17][lsqbr, [, 17][id, j, 17][rsqbr, ], 17][equal, =, 17][id, arr, 17][lsqbr, [, 17][id, j, 17][plus, +, 17][intlit, 1, 17][rsqbr, ], 17][semi, ;, 17]
[id, arr, 18][lsqbr, [, 18][id, j, 18][plus, +, 18][intlit, 1, 18][rsqbr, ], 18][equal, =, 18][id, temp, 18][semi, ;, 18]
[rcurbr, }, 19][else, else, 19][semi, ;, 19]
[id, j, 20][equal, =, 20][id, j, 20][plus, +, 20][intlit, 1, 20][semi, ;, 20]
[rcurbr, }, 21]
[id, i, 22][equal, =, 22][id, i, 22][plus, +, 22][intlit, 1, 22][semi, ;, 22]
[rcurbr, }, 23][semi, ;, 23]
[rcurbr, }, 24]
