===================================================================================
| table: global                                                                   |
===================================================================================
| class     | POLYNOMIAL                                                          |
|    ===========================================================================  |
|    | table: POLYNOMIAL                                                       |  |
|    ===========================================================================  |
|    | inherit   | none        |                                               |  |
|    | function  | evaluate    | (float):float                     | private   |  |
|    |     ==================================================================  |  |
|    |	   | table: POLYNOMIAL::evaluate                                    |  |  |
|    |	   ==================================================================  |  |
|    |	   | param     | x           | float                                |  |  |
|    |	   ==================================================================  |  |
|    ==========================================================================|  |
| class     | LINEAR                                                              |
|    ===========================================================================  |
|    | table: LINEAR                                                           |  |
|    ===========================================================================  |
|    | inherit   | POLYNOMIAL                                                  |  |
|    | data      | a           | float                             | private   |  |
|    | data      | b           | float                             | private   |  |
|    | function  | build       | (float, float): LINEAR            | public    |  |
|    |     ==================================================================  |  |
|    |     | table: LINEAR::build                                           |  |  |
|    |     ==================================================================  |  |
|    |     | param     | A            | float                               |  |  |
|    |     | param     | B            | float                               |  |  |
|    |     | local     | new_function | LINEAR                              |  |  |
|    |     ==================================================================  |  |
|    | function  | evaluate    | (float):float                     | public    |  |
|    |     ==================================================================  |  |
|    |     | table: LINEAR::evaluate                                        |  |  |
|    |     ==================================================================  |  |
|    |     | param     | x            | float                               |  |  |
|    |     | local     | result       | float                               |  |  |
|    |     ==================================================================  |  |
|    ===========================================================================  |
| class     | QUADRATIC                                                           |
|    ===========================================================================  |
|    | table: QUADRATIC                                                        |  |
|    ===========================================================================  |
|    | inherit    | POLYNOMIAL                                                 |  |
|    | data       | a           | float                            | private   |  |
|    | data       | b           | float                            | private   |  |
|    | data       | c           | float                            | private   |  |
|    | function   | build       | (float, float, float): QUADRATIC | public    |  |
|    |     ==================================================================  |  |
|    |     | table: QUADRATIC::build                                        |  |  |
|    |     ==================================================================  |  |
|    |     | param     | a            | float                               |  |  |
|    |     | param     | b            | float                               |  |  |
|    |     | param     | c            | float                               |  |  |
|    |     | local     | new_function | QUADRATIC                           |  |  |
|    |     ==================================================================  |  |
|    | function   | evaluate    | (float):float                    | public    |  |
|    |     ==================================================================  |  |
|    |     | table: QUADRATIC::evaluate                                     |  |  |
|    |     ==================================================================  |  |
|    |     | param     | x            | float                               |  |  |
|    |     | local     | result       | float                               |  |  |
|    |     ==================================================================  |  |
| function    | main                                                              |
|    ===========================================================================  |
|    | table: ::main                                                           |  |
|    ===========================================================================  |
|    | local      | f1          | LINEAR                                       |  |
|    | local      | f2          | QUADRATIC                                    |  | 
|    | local      | counter     | integer                                      |  |
|    ===========================================================================  |
===================================================================================



class POLYNOMIAL {
  public function evaluate: (x: float) => float;
  public  function darkevaluate: (x: float) => float;
  private attribute evaluate: float;
    public  function darkevaluate: (x: float,y:int) => float;
};

class LINEAR isa QUADRATIC {
  private attribute a: float;
  private attribute evaluate: float;
  public  function evaluate: (x: float) => float;
  public  function darkevaluate: (x: float,y:int) => float;

};
class QUADRATIC isa POLYNOMIAL  {
  public  constructor: (A: float, B: float[]);
   public  function evaluate: (x:int) => int;
};